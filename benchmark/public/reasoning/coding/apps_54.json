{
    "problem": "Teacher Herkabe has decided to rank his students again. This time, he wants his list to also be aesthetically pleasant, so he has decided that similar names (those beginning with the same letter or sequence of letters) must be close to one another on the list. Therefore, he has devised the following rule:\n\nFor every two names on the list that begin with the same letter sequence, all names between them on the list must also begin with that letter sequence.\n\nFor example, consider the names MARTHA and MARY (characters from a beautiful story). They both begin with the sequence MAR, so names beginning with the same sequence (like MARCO and MARVIN) can appear in between (but not MAY, for example).\n\nNotice that the lexicographically sorted ordering always satisfies this rule, but it is by no means the only valid ordering. Your task is determining how many different orderings satisfy the rule, i.e. how many options teacher Herkabe has for his ranking list.\n\n-----Input-----\nThe first line of input contains the positive integer $N$ ($3 \\leq N \\leq 3\\ 000$), the number of names. Each of the following $N$ lines contains a single name: a sequence of between $1$ and $3\\ 000$ (inclusive) uppercase English letters. The names are distinct and given in no particular order.\n\n-----Output-----\nThe first and only line of output must contain the required number of possible ranking lists, modulo $1\\ 000\\ 000\\ 007$.\n\n-----Examples-----\nSample Input 1:\n3\nIVO\nJASNA\nJOSIPA\nSample Output 1:\n4\n\nSample Input 2:\n5\nMARICA\nMARTA\nMATO\nMARA\nMARTINA\nSample Output 2:\n24",
    "test_case": "{\n    \"inputs\": [\n        \"3\\nIVO\\nJASNA\\nJOSIPA\\n\",\n        \"5\\nMARICA\\nMARTA\\nMATO\\nMARA\\nMARTINA\\n\",\n        \"4\\nA\\nAA\\nAAA\\nAAAA\\n\"\n    ],\n    \"outputs\": [\n        \"4\\n\",\n        \"24\\n\",\n        \"8\\n\"\n    ]\n}",
    "dataset": "apps",
    "tags": [
        "reasoning/coding"
    ]
}