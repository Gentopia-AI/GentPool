{
    "problem": "Let's call a string a phone number if it has length 11 and fits the pattern \"8xxxxxxxxxx\", where each \"x\" is replaced by a digit.\n\nFor example, \"80123456789\" and \"80000000000\" are phone numbers, while \"8012345678\" and \"79000000000\" are not.\n\nYou have $n$ cards with digits, and you want to use them to make as many phone numbers as possible. Each card must be used in at most one phone number, and you don't have to use all cards. The phone numbers do not necessarily have to be distinct.\n\n\n-----Input-----\n\nThe first line contains an integer $n$ — the number of cards with digits that you have ($1 \\leq n \\leq 100$).\n\nThe second line contains a string of $n$ digits (characters \"0\", \"1\", ..., \"9\") $s_1, s_2, \\ldots, s_n$. The string will not contain any other characters, such as leading or trailing spaces.\n\n\n-----Output-----\n\nIf at least one phone number can be made from these cards, output the maximum number of phone numbers that can be made. Otherwise, output 0.\n\n\n-----Examples-----\nInput\n11\n00000000008\n\nOutput\n1\n\nInput\n22\n0011223344556677889988\n\nOutput\n2\n\nInput\n11\n31415926535\n\nOutput\n0\n\n\n\n-----Note-----\n\nIn the first example, one phone number, \"8000000000\", can be made from these cards.\n\nIn the second example, you can make two phone numbers from the cards, for example, \"80123456789\" and \"80123456789\".\n\nIn the third example you can't make any phone number from the given cards.",
    "test_case": "{\n  \"inputs\": [\n    \"11\\n00000000008\\n\",\n    \"22\\n0011223344556677889988\\n\",\n    \"11\\n31415926535\\n\",\n    \"99\\n097167815527663544905782574817314139311067328533970663873718450545467450059059869618211361469505108\\n\",\n    \"100\\n8820286285185244938452488887088871457098945874486988698468788381417332842888928188688887641132194956\\n\",\n    \"99\\n509170332523502565755650047942914747120102240396245453406790272793996913905060450414255616791704320\\n\",\n    \"100\\n1976473621569903172721407763737179639055561746310369779167351419713916160700096173622427077757986026\\n\",\n    \"100\\n8888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888\\n\",\n    \"10\\n8888888888\\n\",\n    \"20\\n88888888888888888888\\n\",\n    \"30\\n888888888888888888888888888888\\n\",\n    \"40\\n8888888888888888888888888888888888888888\\n\",\n    \"50\\n88888888888888888888888888888888888888888888888888\\n\",\n    \"60\\n888888888888888888888888888888888888888888888888888888888888\\n\",\n    \"70\\n8888888888888888888888888888888888888888888888888888888888888888888888\\n\",\n    \"80\\n88888888888888888888888888888888888888888888888888888888888888888888888888888888\\n\",\n    \"90\\n888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888\\n\",\n    \"11\\n24572366390\\n\",\n    \"21\\n582586788289484878588\\n\",\n    \"31\\n0868889888343881888987888838808\\n\",\n    \"41\\n78888884888874788841882882888088888588888\\n\",\n    \"51\\n882889888888689888850888388887688788888888888858888\\n\",\n    \"61\\n8880888836888988888988888887388888888888868898887888818888888\\n\",\n    \"71\\n88888888888888888888888188888805848888788088888883888883187888838888888\\n\",\n    \"81\\n808888883488887888888808888888888888188888888388888888888888868688888488888882888\\n\",\n    \"91\\n8828880888888884883888488888888888888881888888888884888888848588888808888888888888888880888\\n\",\n    \"100\\n8888888888828188888888888888888808888888888888888888891888888768888888888288888885886888838888888888\\n\",\n    \"22\\n4215079217017196952791\\n\",\n    \"32\\n88257478884887437239023185588797\\n\",\n    \"42\\n885887846290886288816884858898812858495482\\n\",\n    \"52\\n8878588869084488848898838898788838337877898817818888\\n\",\n    \"62\\n18888883884288488882387888486858887882838885288886472818688888\\n\",\n    \"72\\n888488888888823288848804883838888888887888888888228888218488897809784868\\n\",\n    \"82\\n8889809888888888485881851986857288588888888881988888868888836888887858888888888878\\n\",\n    \"92\\n86888880558884738878888381088888888895888881888888888368878888888884888768881888888888808888\\n\",\n    \"100\\n8881888389882878867888888888888888888886388888888870888884878888089888883898887888808688888487888888\\n\",\n    \"33\\n270375004567749549929235905225024\\n\",\n    \"43\\n7404899846883344886153727489084158470112581\\n\",\n    \"53\\n85838985300863473289888099788588319484149888886832906\\n\",\n    \"63\\n728385948188688801288285888788852829888898565895847689806684688\\n\",\n    \"73\\n2185806538483837898808836883483888818818988881880688028788888081888907898\\n\",\n    \"83\\n88584458884288808888588388818938838468960248387898182887888867888888888886088895788\\n\",\n    \"93\\n888088898748888038885888818882806848806887888888882087481868888888177809288888889648468888188\\n\",\n    \"100\\n8088888818885808888888848829886788884187188858898888888788988688884828586988888888288078638898728181\\n\",\n    \"44\\n15920309219313427633220119270900111650391207\\n\",\n    \"54\\n438283821340622774637957966575424773837418828888614203\\n\",\n    \"64\\n8885984815868480968883818886281846682409262501034555933863969284\\n\",\n    \"74\\n70988894874867688968816582886488688881063425288316858438189808828755218508\\n\",\n    \"84\\n181288888282608548858058871581888853888486785801381108858832882809848798828837386086\\n\",\n    \"94\\n8188948828818938226378510887848897889883818858778688882933888883888898198978868888808082461388\\n\",\n    \"100\\n2867878187889776883889958480848802884888888878218089281860321588888888987288888884288488988628618888\\n\",\n    \"55\\n7271714707719515303911625619272900050990324951111943573\\n\",\n    \"65\\n44542121362830719677175203560438858260878894083124543850593761845\\n\",\n    \"75\\n878909759892888846183608689257806813376950958863798487856148633095072259838\\n\",\n    \"85\\n6888887655188885918863889822590788834182048952565514598298586848861396753319582883848\\n\",\n    \"95\\n29488352815808808845913584782288724288898869488882098428839370889284838688458247785878848884289\\n\",\n    \"100\\n2833898888858387469888804083887280788584887487186899808436848018181838884988432785338497585788803883\\n\",\n    \"66\\n747099435917145962031075767196746707764157706291155762576312312094\\n\",\n    \"76\\n7900795570936733366353829649382870728119825830883973668601071678041634916557\\n\",\n    \"86\\n84065885114540280210185082984888812185222886689129308815942798404861082196041321701260\\n\",\n    \"96\\n812087553199958040928832802441581868680188987878748641868838838835609806814288472573117388803351\\n\",\n    \"77\\n11233392925013001334679215120076714945221576003953746107506364475115045309091\\n\",\n    \"87\\n311753415808202195240425076966761033489788093280714672959929008324554784724650182457298\\n\",\n    \"97\\n4088468966684435599488804806521288358953088399738904557539253573051442198885776802972628197705081\\n\",\n    \"100\\n6451941807833681891890004306065158148809856572066617888008875119881621810329816763604830895480467878\\n\",\n    \"88\\n2694079127792970410465292300936220976260790323517221561516591792566791677970332966660472\\n\",\n    \"98\\n87247250157776241281197787785951754485531639139778166755966603305697265958800376912432893847612736\\n\",\n    \"100\\n1835563855281170226095294644116563180561156535623048783710060508361834822227075869575873675232708159\\n\",\n    \"11\\n55814018693\\n\",\n    \"22\\n6188156585823394680191\\n\",\n    \"33\\n429980628264468835720540136177288\\n\",\n    \"44\\n30153452341853403190257244993442815171970194\\n\",\n    \"55\\n3982037603326093160114589190899881252765957832414122484\\n\",\n    \"66\\n157941266854773786962397310504192100434183957442977444078457168272\\n\",\n    \"1\\n0\\n\",\n    \"11\\n80000000000\\n\",\n    \"27\\n888000000000000000000000000\\n\",\n    \"10\\n8000000000\\n\",\n    \"1\\n8\\n\",\n    \"50\\n88000000000000000000000000000000000000000000000000\\n\",\n    \"11\\n81234567090\\n\",\n    \"10\\n8888888888\\n\",\n    \"32\\n88000000000000000000000000000000\\n\",\n    \"57\\n888888888888888888888888888888888888888888888888888888888\\n\",\n    \"22\\n8899999999999999999999\\n\",\n    \"21\\n881234567900123456790\\n\",\n    \"21\\n888888555555555555555\\n\",\n    \"21\\n888000000000000000000\\n\",\n    \"100\\n8800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\\n\",\n    \"21\\n888888888888000000000\\n\",\n    \"8\\n12345678\\n\",\n    \"21\\n880000000000000000000\\n\",\n    \"11\\n81234567123\\n\",\n    \"11\\n88888888888\\n\",\n    \"32\\n88888888888888888888888888888888\\n\",\n    \"33\\n888800000000000000000000000000000\\n\",\n    \"100\\n0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008\\n\",\n    \"21\\n888111111111111111111\\n\",\n    \"77\\n11111111111111111111111111111111111111111111111111111111111111111111111111111\\n\"\n  ],\n  \"outputs\": [\n    \"1\\n\",\n    \"2\\n\",\n    \"0\\n\",\n    \"9\\n\",\n    \"9\\n\",\n    \"0\\n\",\n    \"1\\n\",\n    \"9\\n\",\n    \"0\\n\",\n    \"1\\n\",\n    \"2\\n\",\n    \"3\\n\",\n    \"4\\n\",\n    \"5\\n\",\n    \"6\\n\",\n    \"7\\n\",\n    \"8\\n\",\n    \"0\\n\",\n    \"1\\n\",\n    \"2\\n\",\n    \"3\\n\",\n    \"4\\n\",\n    \"5\\n\",\n    \"6\\n\",\n    \"7\\n\",\n    \"8\\n\",\n    \"9\\n\",\n    \"0\\n\",\n    \"2\\n\",\n    \"3\\n\",\n    \"4\\n\",\n    \"5\\n\",\n    \"6\\n\",\n    \"7\\n\",\n    \"8\\n\",\n    \"9\\n\",\n    \"0\\n\",\n    \"3\\n\",\n    \"4\\n\",\n    \"5\\n\",\n    \"6\\n\",\n    \"7\\n\",\n    \"8\\n\",\n    \"9\\n\",\n    \"0\\n\",\n    \"4\\n\",\n    \"5\\n\",\n    \"6\\n\",\n    \"7\\n\",\n    \"8\\n\",\n    \"9\\n\",\n    \"0\\n\",\n    \"5\\n\",\n    \"6\\n\",\n    \"7\\n\",\n    \"8\\n\",\n    \"9\\n\",\n    \"0\\n\",\n    \"6\\n\",\n    \"7\\n\",\n    \"8\\n\",\n    \"0\\n\",\n    \"7\\n\",\n    \"8\\n\",\n    \"9\\n\",\n    \"0\\n\",\n    \"8\\n\",\n    \"9\\n\",\n    \"1\\n\",\n    \"2\\n\",\n    \"3\\n\",\n    \"2\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"0\\n\",\n    \"1\\n\",\n    \"2\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"2\\n\",\n    \"1\\n\",\n    \"0\\n\",\n    \"2\\n\",\n    \"5\\n\",\n    \"2\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"2\\n\",\n    \"1\\n\",\n    \"0\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"2\\n\",\n    \"3\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"0\\n\"\n  ]\n}",
    "dataset": "apps",
    "tags": [
        "reasoning/coding"
    ]
}