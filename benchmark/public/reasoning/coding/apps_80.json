{
    "problem": "Rarity is designing new clothes, and she is looking for some inspiration! Recently, she learned about the importance of symmetry, and is trying to find ways to incorporate this idea into her designs.\n\nTo learn more about symmetry, she decided to search for inspiration in a naturally-symmetric concept, palindromes. A palindrome is a string that reads the same forwards and backwards. For example, peep and deified are palindromes, while tepee and defied are not.\n\nA substring of a string is a string that can be formed by removing zero or more characters from the start and end of the other string. For example, sig and design are substrings of design, while dig and signed are not.\n\nRarity wants to find the perfect amount of symmetry to incorporate into her new design; to this end, she wants to find a string consisting only of lowercase Latin alphabet characters that\n - has length exactly $N$,\n - has exactly $K$ distinct characters, and\n - whose longest palindromic substring has length exactly $P$.\n\nHelp her find any string that satisfies all her requirements, or tell her that what she wants is impossible.\n\n-----Input-----\nThe first and only line of input contains exactly three integers, $N$ ($1 \\leq N \\leq 10^6$), $K$ ($1 \\leq K \\leq 26$) and $P$ ($1 \\leq P \\leq N$), the requirements of the string.\n\n-----Output-----\nOutput on a line by itself:\n - a string satisfying all her requirements, if any such string exists, or\n - IMPOSSIBLE, otherwise.\n\nIf there are multiple correct answers, you can output any of them.\n\n-----Examples-----\nSample Input 1:\n6 5 3\nSample Output 1:\nrarity\n\nSample Input 2:\n9 8 1\nSample Output 2:\ncanterlot\n\nSample Input 3:\n5 3 5\nSample Output 3:\nmadam",
    "test_case": "{\n    \"inputs\": [\n        \"6 5 3\\n\",\n        \"9 8 1\\n\",\n        \"5 3 5\\n\",\n        \"2 2 2\\n\"\n    ],\n    \"outputs\": [\n        \"rarity\\n\",\n        \"canterlot\\n\",\n        \"madam\\n\",\n        \"IMPOSSIBLE\\n\"\n    ]\n}",
    "dataset": "apps",
    "tags": [
        "reasoning/coding"
    ]
}