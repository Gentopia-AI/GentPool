{
    "problem": "Mirko has just installed a brand new drawing program. The program supports $K$ different colours, denoted by integers from 1 to $K$. All drawing is performed on a canvas with dimensions $N\\times N$. In the beginning, all cells are white (denoted by 1).\n\nThe upper left cell of the canvas has coordinates $(0, 0)$. The first coordinate, $x$, increases iterating over rows, and the second, $y$, increases iterating over columns.\n\nMirko’s favourite pastime is drawing rectangular checkerboard patterns using the command PAINT c x1 y1 x2 y2, where $c$ denotes the chosen colour, and $(x1, y1)$ and $(x2, y2)$ are coordinates of the upper left and lower right cells, respectively, of the rectangle being painted.\n\nThe upper left cell of the rectangle will be painted in the chosen colour, while the rest are determined by the checkerboard pattern. Cells that are not painted over by the chosen colour will retain their previous colour. For example, a white canvas painted over by a red checkerboard pattern will look like this:\n\nMirko has recently discovered two additional commands. He can save his painting at any time using the creatively named command SAVE, and load it again later using the command LOAD x, where $x$ is a positive integer representing the ordinal number of the save.\n\nUnfortunately, the program has crashed and Mirko’s painting is lost forever. Luckily, Mirko has saved a log of all used commands. Can you help Mirko by reconstructing the lost painting?\n\n-----Input-----\nThe first line of input contains three positive integers, $N$ ($1 \\leq N \\leq 1000$), $K$ ($2 \\leq K \\leq 100000$), and $M$ ($1 \\leq M \\leq 100000$, $M$ is the number of commands).\n\nEach of the following $M$ lines contains one of the three described commands. The input will not contain any illegal commands.\n\n-----Output-----\nOutput $N$ lines, each containing N integers representing the colours of cells in the corresponding row of the painting.\n\n-----Examples-----\nSample Input 1:\n4 3 2\nPAINT 2 0 0 3 3\nPAINT 3 0 3 3 3\nSample Output 1:\n2 1 2 3\n1 2 1 2\n2 1 2 3\n1 2 1 2\n\nSample Input 2:\n3 3 4\nPAINT 3 0 0 1 1\nSAVE\nPAINT 2 1 1 2 2\nLOAD 1\nSample Output 2:\n3 1 1\n1 3 1\n1 1 1",
    "test_case": "{\n    \"inputs\": [\n        \"4 3 2\\nPAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3\\n\",\n        \"3 3 4\\nPAINT 3 0 0 1 1\\nSAVE\\nPAINT 2 1 1 2 2\\nLOAD 1\\n\",\n        \"3 4 7\\nPAINT 2 0 0 1 1\\nSAVE\\nPAINT 3 1 1 2 2\\nSAVE\\nPAINT 4 0 2 0 2\\nLOAD 2\\nPAINT 4 2 0 2 0\\n\"\n    ],\n    \"outputs\": [\n        \"2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\\n\",\n        \"3 1 1\\n1 3 1\\n1 1 1\\n\",\n        \"2 1 1\\n1 3 1\\n4 1 3\\n\"\n    ]\n}",
    "dataset": "apps",
    "tags": [
        "reasoning/coding"
    ]
}