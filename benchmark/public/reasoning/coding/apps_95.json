{
    "problem": "“Drat!” cursed Charles. “This stupid carry bar is not working in my Engine! I just tried to calculate the square of a number, but it’s wrong; all of the carries are lost.”\n\n“Hmm,” mused Ada, “arithmetic without carries! I wonder if I can figure out what your original input was, based on the result I see on the Engine.”\n\nCarryless addition, denoted by $\\oplus $, is the same as normal addition, except any carries are ignored (in base $10$). Thus, $37 \\oplus 48$ is $75$, not $85$.\n\nCarryless multiplication, denoted by $\\otimes $, is performed using the schoolboy algorithm for multiplication, column by column, but the intermediate additions are calculated using carryless addition. More formally, Let $a_ m a_{m-1} \\ldots a_1 a_0$ be the digits of $a$, where $a_0$ is its least significant digit. Similarly define $b_ n b_{n-1} \\ldots b_1 b_0$ be the digits of $b$. The digits of $c = a \\otimes b$ are given by the following equation:\\[ c_ k = \\left( a_0 b_ k \\oplus a_1 b_{k-1} \\oplus \\cdots \\oplus a_{k-1} b_1 \\oplus a_ k b_0 \\right) \\bmod {10}, \\]\n\nwhere any $a_ i$ or $b_ j$ is considered zero if $i > m$ or $j > n$. For example, $9 \\otimes 1234$ is $9876$, $90 \\otimes 1234$ is $98760$, and $99 \\otimes 1234$ is $97536$.\n\nGiven $N$, find the smallest positive integer $a$ such that $a \\otimes a = N$.\n\n-----Input-----\nThe input consists of a single line with a positive integer $N$, with at most $25$ digits and no leading zeros.\n\n-----Output-----\nPrint, on a single line, the least positive number $a$ such that $a \\otimes a = N$. If there is no such $a$, print ‘-1’ instead.\n\n-----Examples-----\nSample Input 1:\n6\nSample Output 1:\n4\n\nSample Input 2:\n149\nSample Output 2:\n17\n\nSample Input 3:\n123476544\nSample Output 3:\n11112",
    "test_case": "{\n    \"inputs\": [\n        \"6\\n\",\n        \"149\\n\",\n        \"123476544\\n\",\n        \"15\\n\"\n    ],\n    \"outputs\": [\n        \"4\\n\",\n        \"17\\n\",\n        \"11112\\n\",\n        \"-1\\n\"\n    ]\n}",
    "dataset": "apps",
    "tags": [
        "reasoning/coding"
    ]
}