{
    "problem": "Web pages are littered with ads (advertisements) these days. You wrote a simple program to detect images which are ads and remove them.\n\nCharacters that are any of the following are allowed in images:\n - alphanumeric characters\n - question mark ‘?’\n - exclamation mark ‘!’\n - comma ‘,’\n - full stop ‘.’\n - whitespace ‘ ’\n\nAny images contained characters that are not allowed are considered ads, and will be removed by your program. The ‘$+$’ character will be used only as the border of an image.\n\nAll images will follow these rules:\n - They are all axis-aligned rectangles with ‘$+$’ as its border and is at least $3 x 3$ big (including the borders).\n - All ‘$+$’ characters belong to the border of exactly 1 image.\n - Borders of different images will not be adjacent to each other (contact at their corners is also not allowed).\n - They can contain other images while adhering to the rules above.\n - For every banned character that is found inside at least one image, in order not to remove too many unnecessary parts of the images on the web page, you decide that the smallest image (in terms of pixel count) that contains that character will be flagged as an ad and removed.\n - When an ad is removed, every character inside the ad and the border is replaced with a whitespace.\n\nNote that the web page is not considered an image. Characters found on the web page that is not in any image should not be removed.\n\n-----Input-----\nThe first line of the input contains $1 \\leq H \\leq 200$ and $1 \\leq W \\leq 200$, the height and width of the web page to be processed respectively. $H$ lines follow, each line contain exactly $W$ ASCII characters whose ASCII decimal value fall in the range $[32, 126]$.\n\n-----Output-----\nOutput the web page with all the ads removed. Do not print extra spaces or new lines.\n\n-----Subtasks-----\n - (21 Points): There is no ads in the web page at all.\n - (21 Points): There is either one image or no image in the web page.\n - (28 Points): No images will be found inside other images.\n - (30 Points): No additional constraint.\n\n-----Examples-----\nSample Input 1:\n8 20\n apples are great!  \n++++++++++++++++++++\n+ oranges are      +\n+ way better!      +\n+ #oranges>apples  +\n++++++++++++++++++++\n check out our      \n fresh apples!      \nSample Output 1:\n apples are great!  \n                    \n                    \n                    \n                    \n                    \n check out our      \n fresh apples!      \n\nSample Input 2:\n7 7\n+++++++\n+  =  +\n+ +++ +\n+ + + +\n+ +++ +\n+     +\n+++++++\nSample Output 2:\n       \n       \n       \n       \n       \n       \n",
    "test_case": "{\n    \"inputs\": [\n        \"8 20\\n apples are great!  \\n++++++++++++++++++++\\n+ oranges are      +\\n+ way better!      +\\n+ #oranges>apples  +\\n++++++++++++++++++++\\n check out our      \\n fresh apples!      \\n\",\n        \"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\",\n        \"7 7\\n+++++++\\n+     +\\n+ +++ +\\n+ +=+ +\\n+ +++ +\\n+     +\\n+++++++\\n\"\n    ],\n    \"outputs\": [\n        \" apples are great!  \\n                    \\n                    \\n                    \\n                    \\n                    \\n check out our      \\n fresh apples!      \\n\",\n        \"       \\n       \\n       \\n       \\n       \\n       \\n       \\n\",\n        \"+++++++\\n+     +\\n+     +\\n+     +\\n+     +\\n+     +\\n+++++++\\n\"\n    ]\n}",
    "dataset": "apps",
    "tags": [
        "reasoning/coding"
    ]
}